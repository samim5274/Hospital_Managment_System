//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SANITARIUMModel", "FK_DignosticTestDetail_CategoryName", "CategoryInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SanitariumProject.CategoryInfo), "DignosticTestDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SanitariumProject.DignosticTestDetail), true)]
[assembly: EdmRelationshipAttribute("SANITARIUMModel", "FK_SubCategoryInfo_CategoryInfo", "CategoryInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SanitariumProject.CategoryInfo), "SubCategoryInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SanitariumProject.SubCategoryInfo), true)]
[assembly: EdmRelationshipAttribute("SANITARIUMModel", "FK_DignosticTestDetail_DepartmentInfo", "DepartmentInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SanitariumProject.DepartmentInfo), "DignosticTestDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SanitariumProject.DignosticTestDetail), true)]
[assembly: EdmRelationshipAttribute("SANITARIUMModel", "FK_DignosticTestDetail_GroupInfo", "GroupInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SanitariumProject.GroupInfo), "DignosticTestDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SanitariumProject.DignosticTestDetail), true)]
[assembly: EdmRelationshipAttribute("SANITARIUMModel", "FK_DignosticTestDetail_SpecimenInfo", "SpecimenInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SanitariumProject.SpecimenInfo), "DignosticTestDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SanitariumProject.DignosticTestDetail), true)]
[assembly: EdmRelationshipAttribute("SANITARIUMModel", "FK_DignosticTestDetail_SubCategoryInfo", "SubCategoryInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SanitariumProject.SubCategoryInfo), "DignosticTestDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SanitariumProject.DignosticTestDetail), true)]

#endregion

namespace SanitariumProject
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SANITARIUMEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SANITARIUMEntities object using the connection string found in the 'SANITARIUMEntities' section of the application configuration file.
        /// </summary>
        public SANITARIUMEntities() : base("name=SANITARIUMEntities", "SANITARIUMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SANITARIUMEntities object.
        /// </summary>
        public SANITARIUMEntities(string connectionString) : base(connectionString, "SANITARIUMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SANITARIUMEntities object.
        /// </summary>
        public SANITARIUMEntities(EntityConnection connection) : base(connection, "SANITARIUMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryInfo> CategoryInfoes
        {
            get
            {
                if ((_CategoryInfoes == null))
                {
                    _CategoryInfoes = base.CreateObjectSet<CategoryInfo>("CategoryInfoes");
                }
                return _CategoryInfoes;
            }
        }
        private ObjectSet<CategoryInfo> _CategoryInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DepartmentInfo> DepartmentInfoes
        {
            get
            {
                if ((_DepartmentInfoes == null))
                {
                    _DepartmentInfoes = base.CreateObjectSet<DepartmentInfo>("DepartmentInfoes");
                }
                return _DepartmentInfoes;
            }
        }
        private ObjectSet<DepartmentInfo> _DepartmentInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DignosticTestDetail> DignosticTestDetails
        {
            get
            {
                if ((_DignosticTestDetails == null))
                {
                    _DignosticTestDetails = base.CreateObjectSet<DignosticTestDetail>("DignosticTestDetails");
                }
                return _DignosticTestDetails;
            }
        }
        private ObjectSet<DignosticTestDetail> _DignosticTestDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupInfo> GroupInfoes
        {
            get
            {
                if ((_GroupInfoes == null))
                {
                    _GroupInfoes = base.CreateObjectSet<GroupInfo>("GroupInfoes");
                }
                return _GroupInfoes;
            }
        }
        private ObjectSet<GroupInfo> _GroupInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecimenInfo> SpecimenInfoes
        {
            get
            {
                if ((_SpecimenInfoes == null))
                {
                    _SpecimenInfoes = base.CreateObjectSet<SpecimenInfo>("SpecimenInfoes");
                }
                return _SpecimenInfoes;
            }
        }
        private ObjectSet<SpecimenInfo> _SpecimenInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubCategoryInfo> SubCategoryInfoes
        {
            get
            {
                if ((_SubCategoryInfoes == null))
                {
                    _SubCategoryInfoes = base.CreateObjectSet<SubCategoryInfo>("SubCategoryInfoes");
                }
                return _SubCategoryInfoes;
            }
        }
        private ObjectSet<SubCategoryInfo> _SubCategoryInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryInfoes(CategoryInfo categoryInfo)
        {
            base.AddObject("CategoryInfoes", categoryInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DepartmentInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartmentInfoes(DepartmentInfo departmentInfo)
        {
            base.AddObject("DepartmentInfoes", departmentInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DignosticTestDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDignosticTestDetails(DignosticTestDetail dignosticTestDetail)
        {
            base.AddObject("DignosticTestDetails", dignosticTestDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupInfoes(GroupInfo groupInfo)
        {
            base.AddObject("GroupInfoes", groupInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecimenInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecimenInfoes(SpecimenInfo specimenInfo)
        {
            base.AddObject("SpecimenInfoes", specimenInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubCategoryInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubCategoryInfoes(SubCategoryInfo subCategoryInfo)
        {
            base.AddObject("SubCategoryInfoes", subCategoryInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SANITARIUMModel", Name="CategoryInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static CategoryInfo CreateCategoryInfo(global::System.Int32 id)
        {
            CategoryInfo categoryInfo = new CategoryInfo();
            categoryInfo.Id = id;
            return categoryInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_CategoryName", "DignosticTestDetail")]
        public EntityCollection<DignosticTestDetail> DignosticTestDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_CategoryName", "DignosticTestDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_CategoryName", "DignosticTestDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_SubCategoryInfo_CategoryInfo", "SubCategoryInfo")]
        public EntityCollection<SubCategoryInfo> SubCategoryInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubCategoryInfo>("SANITARIUMModel.FK_SubCategoryInfo_CategoryInfo", "SubCategoryInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubCategoryInfo>("SANITARIUMModel.FK_SubCategoryInfo_CategoryInfo", "SubCategoryInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SANITARIUMModel", Name="DepartmentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DepartmentInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DepartmentInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DepartmentInfo CreateDepartmentInfo(global::System.Int32 id)
        {
            DepartmentInfo departmentInfo = new DepartmentInfo();
            departmentInfo.Id = id;
            return departmentInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentName
        {
            get
            {
                return _DepartmentName;
            }
            set
            {
                OnDepartmentNameChanging(value);
                ReportPropertyChanging("DepartmentName");
                _DepartmentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepartmentName");
                OnDepartmentNameChanged();
            }
        }
        private global::System.String _DepartmentName;
        partial void OnDepartmentNameChanging(global::System.String value);
        partial void OnDepartmentNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_DepartmentInfo", "DignosticTestDetail")]
        public EntityCollection<DignosticTestDetail> DignosticTestDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_DepartmentInfo", "DignosticTestDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_DepartmentInfo", "DignosticTestDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SANITARIUMModel", Name="DignosticTestDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DignosticTestDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DignosticTestDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DignosticTestDetail CreateDignosticTestDetail(global::System.Int32 id)
        {
            DignosticTestDetail dignosticTestDetail = new DignosticTestDetail();
            dignosticTestDetail.Id = id;
            return dignosticTestDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestName
        {
            get
            {
                return _TestName;
            }
            set
            {
                OnTestNameChanging(value);
                ReportPropertyChanging("TestName");
                _TestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestName");
                OnTestNameChanged();
            }
        }
        private global::System.String _TestName;
        partial void OnTestNameChanging(global::System.String value);
        partial void OnTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DepartmentId;
        partial void OnDepartmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubCategoryId
        {
            get
            {
                return _SubCategoryId;
            }
            set
            {
                OnSubCategoryIdChanging(value);
                ReportPropertyChanging("SubCategoryId");
                _SubCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubCategoryId");
                OnSubCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubCategoryId;
        partial void OnSubCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupId;
        partial void OnGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpecimenId
        {
            get
            {
                return _SpecimenId;
            }
            set
            {
                OnSpecimenIdChanging(value);
                ReportPropertyChanging("SpecimenId");
                _SpecimenId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecimenId");
                OnSpecimenIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SpecimenId;
        partial void OnSpecimenIdChanging(Nullable<global::System.Int32> value);
        partial void OnSpecimenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestCost
        {
            get
            {
                return _TestCost;
            }
            set
            {
                OnTestCostChanging(value);
                ReportPropertyChanging("TestCost");
                _TestCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestCost");
                OnTestCostChanged();
            }
        }
        private Nullable<global::System.Int32> _TestCost;
        partial void OnTestCostChanging(Nullable<global::System.Int32> value);
        partial void OnTestCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoomNo
        {
            get
            {
                return _RoomNo;
            }
            set
            {
                OnRoomNoChanging(value);
                ReportPropertyChanging("RoomNo");
                _RoomNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomNo");
                OnRoomNoChanged();
            }
        }
        private Nullable<global::System.Int32> _RoomNo;
        partial void OnRoomNoChanging(Nullable<global::System.Int32> value);
        partial void OnRoomNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_CategoryName", "CategoryInfo")]
        public CategoryInfo CategoryInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryInfo>("SANITARIUMModel.FK_DignosticTestDetail_CategoryName", "CategoryInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryInfo>("SANITARIUMModel.FK_DignosticTestDetail_CategoryName", "CategoryInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CategoryInfo> CategoryInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryInfo>("SANITARIUMModel.FK_DignosticTestDetail_CategoryName", "CategoryInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CategoryInfo>("SANITARIUMModel.FK_DignosticTestDetail_CategoryName", "CategoryInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_DepartmentInfo", "DepartmentInfo")]
        public DepartmentInfo DepartmentInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentInfo>("SANITARIUMModel.FK_DignosticTestDetail_DepartmentInfo", "DepartmentInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentInfo>("SANITARIUMModel.FK_DignosticTestDetail_DepartmentInfo", "DepartmentInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DepartmentInfo> DepartmentInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentInfo>("SANITARIUMModel.FK_DignosticTestDetail_DepartmentInfo", "DepartmentInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DepartmentInfo>("SANITARIUMModel.FK_DignosticTestDetail_DepartmentInfo", "DepartmentInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_GroupInfo", "GroupInfo")]
        public GroupInfo GroupInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupInfo>("SANITARIUMModel.FK_DignosticTestDetail_GroupInfo", "GroupInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupInfo>("SANITARIUMModel.FK_DignosticTestDetail_GroupInfo", "GroupInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupInfo> GroupInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupInfo>("SANITARIUMModel.FK_DignosticTestDetail_GroupInfo", "GroupInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupInfo>("SANITARIUMModel.FK_DignosticTestDetail_GroupInfo", "GroupInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_SpecimenInfo", "SpecimenInfo")]
        public SpecimenInfo SpecimenInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecimenInfo>("SANITARIUMModel.FK_DignosticTestDetail_SpecimenInfo", "SpecimenInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecimenInfo>("SANITARIUMModel.FK_DignosticTestDetail_SpecimenInfo", "SpecimenInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SpecimenInfo> SpecimenInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecimenInfo>("SANITARIUMModel.FK_DignosticTestDetail_SpecimenInfo", "SpecimenInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SpecimenInfo>("SANITARIUMModel.FK_DignosticTestDetail_SpecimenInfo", "SpecimenInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_SubCategoryInfo", "SubCategoryInfo")]
        public SubCategoryInfo SubCategoryInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategoryInfo>("SANITARIUMModel.FK_DignosticTestDetail_SubCategoryInfo", "SubCategoryInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategoryInfo>("SANITARIUMModel.FK_DignosticTestDetail_SubCategoryInfo", "SubCategoryInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubCategoryInfo> SubCategoryInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategoryInfo>("SANITARIUMModel.FK_DignosticTestDetail_SubCategoryInfo", "SubCategoryInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubCategoryInfo>("SANITARIUMModel.FK_DignosticTestDetail_SubCategoryInfo", "SubCategoryInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SANITARIUMModel", Name="GroupInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GroupInfo CreateGroupInfo(global::System.Int32 id)
        {
            GroupInfo groupInfo = new GroupInfo();
            groupInfo.Id = id;
            return groupInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_GroupInfo", "DignosticTestDetail")]
        public EntityCollection<DignosticTestDetail> DignosticTestDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_GroupInfo", "DignosticTestDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_GroupInfo", "DignosticTestDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SANITARIUMModel", Name="SpecimenInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecimenInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecimenInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SpecimenInfo CreateSpecimenInfo(global::System.Int32 id)
        {
            SpecimenInfo specimenInfo = new SpecimenInfo();
            specimenInfo.Id = id;
            return specimenInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecimenName
        {
            get
            {
                return _SpecimenName;
            }
            set
            {
                OnSpecimenNameChanging(value);
                ReportPropertyChanging("SpecimenName");
                _SpecimenName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecimenName");
                OnSpecimenNameChanged();
            }
        }
        private global::System.String _SpecimenName;
        partial void OnSpecimenNameChanging(global::System.String value);
        partial void OnSpecimenNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_SpecimenInfo", "DignosticTestDetail")]
        public EntityCollection<DignosticTestDetail> DignosticTestDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_SpecimenInfo", "DignosticTestDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_SpecimenInfo", "DignosticTestDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SANITARIUMModel", Name="SubCategoryInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubCategoryInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubCategoryInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SubCategoryInfo CreateSubCategoryInfo(global::System.Int32 id)
        {
            SubCategoryInfo subCategoryInfo = new SubCategoryInfo();
            subCategoryInfo.Id = id;
            return subCategoryInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubCategoryName
        {
            get
            {
                return _SubCategoryName;
            }
            set
            {
                OnSubCategoryNameChanging(value);
                ReportPropertyChanging("SubCategoryName");
                _SubCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubCategoryName");
                OnSubCategoryNameChanged();
            }
        }
        private global::System.String _SubCategoryName;
        partial void OnSubCategoryNameChanging(global::System.String value);
        partial void OnSubCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_SubCategoryInfo_CategoryInfo", "CategoryInfo")]
        public CategoryInfo CategoryInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryInfo>("SANITARIUMModel.FK_SubCategoryInfo_CategoryInfo", "CategoryInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryInfo>("SANITARIUMModel.FK_SubCategoryInfo_CategoryInfo", "CategoryInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CategoryInfo> CategoryInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryInfo>("SANITARIUMModel.FK_SubCategoryInfo_CategoryInfo", "CategoryInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CategoryInfo>("SANITARIUMModel.FK_SubCategoryInfo_CategoryInfo", "CategoryInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SANITARIUMModel", "FK_DignosticTestDetail_SubCategoryInfo", "DignosticTestDetail")]
        public EntityCollection<DignosticTestDetail> DignosticTestDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_SubCategoryInfo", "DignosticTestDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DignosticTestDetail>("SANITARIUMModel.FK_DignosticTestDetail_SubCategoryInfo", "DignosticTestDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SANITARIUMModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }

    #endregion

    
}
